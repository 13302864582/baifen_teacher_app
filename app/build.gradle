apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    /*compileSdkVersion 23
    buildToolsVersion '25.0.0'*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

  /*  task clean(type: Exec) {
        ext.lockhunter = '\"D:\\Program Files\\LockHunter.exe\"'
        def buildDir = file(new File("build"))
        commandLine 'cmd', "$lockhunter", '/delete', '/silent', buildDir
    }*/

    // 移除lint检查的error
//执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'

    }



    dexOptions {
        //incremental true
        javaMaxHeapSize "4g" //specify the heap size for the dex process
        preDexLibraries = false //delete the already predexed libraries

    }

    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }
    }


    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }

    defaultConfig {
        applicationId "com.ucuxin.ucuxin.tec"
        /*minSdkVersion 16
        targetSdkVersion 23
        versionCode 3037
        versionName "2.5.7"*/
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 3037
        versionName "2.5.7"
        flavorDimensions "default"
        // dex突破65535的限制
        multiDexEnabled true
        // AndroidManifest.xml 里面channel的value为 ${channel}
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    //签名
    /*signingConfigs {
        debug {
            storeFile file('G:/Android/keys/uxarea_uxyb_teacher.jks')
            storePassword 'ucuxin1234'
            keyAlias 'uxyb_teacher'
            keyPassword 'uxybteacher1234'
            v1SigningEnabled false
            v2SigningEnabled false

        }
        release {
            storeFile file('G:/Android/keys/uxarea_uxyb_teacher.jks')
            storePassword 'ucuxin1234'
            keyAlias 'uxyb_teacher'
            keyPassword 'uxybteacher1234'
            v1SigningEnabled false
            v2SigningEnabled false
        }
    }*/


    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            //加载默认混淆配置文件 progudard-android.txt在sdk目录里面，不用管，proguard.cfg是我们自己配<span></span>的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            //signingConfig signingConfigs.release
            //我想把其中的${app_label}替换为@string/app_name
            manifestPlaceholders = [app_label: "@string/app_name"]
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
            //signingConfig signingConfigs.debug
            //我想把其中的${app_label}替换为@string/app_name
            manifestPlaceholders = [app_label: "@string/app_name_debug"]
        }
    }

    productFlavors {
        // 把dev产品型号的apk的AndroidManifest中的channel替换dev
        //or批量打包

        ucuxin {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "ucuxin"]
        }
        /*
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        _360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        ucuxin{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"ucuxin"]
        }
        xiaomi{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"xiaomi"]
        }
        _360{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"360"]
        }
        baidu{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"baidu"]
        }
        wandoujia{
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"wandoujia"]
        }
        */

    }

//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    //dex最多65535个方法数的瓶颈
    implementation 'com.android.support:multidex:1.0.0'
    implementation project(':library_alipay')
    implementation project(':library_cropper')
    implementation project(':library_viewpagerindicator')
    implementation project(':library_volley')
    implementation project(':library_websocketclient')
    implementation project(':library_pulltorefresh')
    implementation rootProject.ext.dependencies.glide
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraintlayout
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.permission
    //implementation 'com.android.support:appcompat-v7:23.2.1'
    //implementation 'com.android.support:design:23.2.0'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    implementation 'com.jaeger.statusbaruitl:library:1.0.0'
    //检查内存泄漏
    /*debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
        releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
        testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'*/
    //Bugly 集成
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.1.5
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'de.hdodenhof:circleimageview:3.0.0'
}






